name: iOS e2e tests

on: [pull_request, workflow_dispatch]

jobs:
  ios-e2e:
    runs-on: self-hosted
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: Initial Debug - Check Current Directory and Files
        run: |
          echo "Checking current directory and files..."
          pwd
          ls -la
        # Provides a baseline for debugging without exposing environment variables

      - name: Set up github keys
        run: |
          echo "Setting up SSH for git operations..."
          git config core.sshCommand "ssh -i ~/.ssh/id_ed25519 -F /dev/null"

      - name: Set up ENV vars & scripts
        run: |
          # read local env vars
          source ~/.bashrc
          # fetch env vars
          git clone git@github.com:rainbow-me/rainbow-env.git
          # unpack dotenv
          mv rainbow-env/dotenv .env && rm -rf rainbow-env 
          # run CI scripts
          eval $CI_SCRIPTS
          # tweak dotenv for e2e 
          sed -i''-e "s/IS_TESTING=false/IS_TESTING=true/" .env && rm -f .env-e

      - name: Debug - Check .env File Post-Setup
        run: |
          echo "Checking if .env file was correctly set up..."
          if [ -f .env ]; then
            echo ".env file exists."
          else
            echo ".env file does not exist."
          fi
        # Verifies .env setup without printing its contents for security

      - name: Install deps via Yarn
        run: yarn setup-ci
        # Install project dependencies

      - name: Check for frozen lockfile
        run: yarn check-lockfile
        # Ensure yarn.lock file has not been modified

      - name: Audit CI
        run: yarn audit-ci --config audit-ci.jsonc
        # Run yarn audit-ci to check for vulnerabilities

      - name: Lint
        run: yarn lint:ci
        # Perform linting

      - name: Install Pods
        run: |
          cd ios && bundle install && pod install --repo-update && cd ..
        # Install CocoaPods dependencies

      - name: Debug - Verify Pod Installation
        run: |
          echo "Verifying Pod installation..."
          cd ios
          ls -la Pods
          cd ..
        # Debug step to verify Pods without exposing sensitive information

      - name: Rebuild detox cache
        run: ./node_modules/.bin/detox clean-framework-cache && ./node_modules/.bin/detox build-framework-cache
        # Clean and rebuild Detox cache

      - name: Build the app in Release mode
        run: ./node_modules/.bin/detox build --configuration ios.sim.release
        # Build the app with Detox in Release mode

      - name: Run iOS e2e tests
        run: ./node_modules/.bin/detox test -R 5 --configuration ios.sim.release --forceExit --bail
        # Run end-to-end tests
